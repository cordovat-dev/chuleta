done:

now we have to deal with duplicating paths in db
	answer: delete before insert
commit name or date?
	answer: usa tags instead
check if any DML was genereted (any changes found)
	answer: redirect to a temp file and check whether some change was found
manage if any repo is missing the last tag
	answer: catch error, suggest solutions and abort
manage if GIT_INTEGRATION but no LAST_GIT_TAG value in DB (this calls for a full update before starting using git integration)
	answer: call a full update and inform the user, update populate LAST_GIT_TAG (pending implementation)
create a function to delete all tags except the current one
	answer: done
show git related db settings in show config
	answer: done
add functionality to config repos from config file (pass values to db like BASE_DIR)
	answer: done
backup also on git-based updates
	answer: no change necessary
paths are duplicated when actually run
	answer: seems adding an unique constraint solved it, also no PK violation (somehow expected)!
not fail if working directory is not clean, perhaps just a warning
	answer: now it's just a warning
when should file-and-db-scoped variables be updated in the db? right now sqls.sh
	answer: on config and nowhere else
catch when a repo folder doesn't exist in gitf
	done
if changing from normal to git-based updates, clear LAST_GIT_TAG setting to force initual full update
       done

pending:

- print before, processing and after also during git-based updates (b,a ready, but processing needs a little work
- do not backup if no change was made, in order to save space (or delete backup when no change)
- write db changes to a log



